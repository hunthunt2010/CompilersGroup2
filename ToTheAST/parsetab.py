
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = b'a\xa3\xdd\xc5\xdc\xe6\x01\xfd\xb44]Y,L\xd7$'
    
_lr_action_items = {'lessequal':([1,2,8,11,25,26,29,36,37,41,42,44,52,],[-18,17,-28,-29,17,-29,17,17,-16,17,17,17,17,]),'identifier':([0,3,4,6,7,9,17,18,19,20,21,22,23,24,27,32,33,34,35,39,40,45,48,50,51,56,57,],[11,-31,26,11,26,31,-24,-22,-20,-21,-23,-5,26,-19,-4,26,-6,26,-30,31,26,-7,26,11,-8,-27,-9,]),'multiply':([1,2,8,11,25,26,29,36,37,41,42,44,52,],[-18,18,-28,-29,18,-29,18,18,-16,18,18,18,18,]),'comma':([1,8,26,30,31,36,37,43,44,52,],[-18,-28,-29,39,-15,-17,-16,39,39,39,]),'divide':([1,2,8,11,25,26,29,36,37,41,42,44,52,],[-18,21,-28,-29,21,-29,21,21,-16,21,21,21,21,]),'int':([0,6,13,16,22,27,33,45,50,51,56,57,],[3,3,-32,3,-5,-4,-6,-7,3,-8,-27,-9,]),'return':([0,6,22,27,33,45,50,51,56,57,],[4,4,-5,-4,-6,-7,4,-8,-27,-9,]),'lp':([0,4,6,7,15,17,18,19,20,21,22,23,24,27,32,33,34,40,45,48,50,51,56,57,],[7,7,7,7,34,-24,-22,-20,-21,-23,-5,7,-19,-4,7,-6,7,7,-7,7,7,-8,-27,-9,]),'minus':([1,2,8,11,25,26,29,36,37,41,42,44,52,],[-18,20,-28,-29,20,-29,20,20,-16,20,20,20,20,]),'rb':([6,22,27,28,33,45,50,51,53,56,57,],[-3,-5,-4,-2,-6,-7,-3,-8,56,-27,-9,]),'else':([51,56,],[54,-27,]),'const':([0,6,13,16,22,27,33,45,50,51,56,57,],[13,13,-32,13,-5,-4,-6,-7,13,-8,-27,-9,]),'assign':([11,30,31,43,],[32,40,-15,48,]),'leftshift':([1,2,8,11,25,26,29,36,37,41,42,44,52,],[-18,24,-28,-29,24,-29,24,24,-16,24,24,24,24,]),'int_value':([0,4,6,7,17,18,19,20,21,22,23,24,27,32,33,34,40,45,48,50,51,56,57,],[8,8,8,8,-24,-22,-20,-21,-23,-5,8,-19,-4,8,-6,8,8,-7,8,8,-8,-27,-9,]),'lb':([46,54,],[50,50,]),'$end':([0,6,10,14,22,27,28,33,45,51,56,57,],[-3,-3,0,-1,-5,-4,-2,-6,-7,-8,-27,-9,]),'if':([0,6,22,27,33,45,50,51,56,57,],[15,15,-5,-4,-6,-7,15,-8,-27,-9,]),'semi':([1,2,4,5,8,11,12,25,26,30,31,36,37,38,41,43,44,47,49,52,55,],[-18,22,-25,27,-28,-29,33,-26,-29,-14,-15,-17,-16,-10,45,-14,-14,-12,-11,-14,-13,]),'plus':([1,2,8,11,25,26,29,36,37,41,42,44,52,],[-18,19,-28,-29,19,-29,19,19,-16,19,19,19,19,]),'rp':([1,8,26,29,36,37,42,],[-18,-28,-29,37,-17,-16,46,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'VALUE':([0,4,6,7,23,32,34,40,48,50,],[1,1,1,1,1,1,1,1,1,1,]),'EXPR':([0,4,6,7,23,32,34,40,48,50,],[2,25,2,29,36,41,42,44,52,2,]),'MULTI':([30,43,44,52,],[38,47,49,55,]),'START':([0,],[10,]),'RETURN':([0,6,50,],[12,12,12,]),'DECL':([0,6,50,],[5,5,5,]),'STMT':([0,6,50,],[6,6,6,]),'BINARYOPERATOR':([2,25,29,36,41,42,44,52,],[23,23,23,23,23,23,23,23,]),'VARIABLE':([9,39,],[30,43,]),'STMTS':([0,6,50,],[14,28,53,]),'TYPE':([0,6,16,50,],[9,9,35,9,]),'MODIFIER':([0,6,16,50,],[16,16,16,16,]),'CODEBLOCK':([46,54,],[51,57,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> START","S'",1,None,None,None),
  ('START -> STMTS','START',1,'p_START','scanner.py',88),
  ('STMTS -> STMT STMTS','STMTS',2,'p_STMTS','scanner.py',93),
  ('STMTS -> <empty>','STMTS',0,'p_EMPTY_STMTS','scanner.py',99),
  ('STMT -> DECL semi','STMT',2,'p_STMT_DECL','scanner.py',102),
  ('STMT -> EXPR semi','STMT',2,'p_STMT_EXPR','scanner.py',106),
  ('STMT -> RETURN semi','STMT',2,'p_STMT_RETURN','scanner.py',110),
  ('STMT -> identifier assign EXPR semi','STMT',4,'p_STMT_ASSIGN','scanner.py',114),
  ('STMT -> if lp EXPR rp CODEBLOCK','STMT',5,'p_IF_STMT','scanner.py',120),
  ('STMT -> if lp EXPR rp CODEBLOCK else CODEBLOCK','STMT',7,'p_IF_ELSE_STMT','scanner.py',127),
  ('DECL -> TYPE VARIABLE MULTI','DECL',3,'p_DECL','scanner.py',135),
  ('DECL -> TYPE VARIABLE assign EXPR MULTI','DECL',5,'p_DECL_ASSIGN','scanner.py',142),
  ('MULTI -> comma VARIABLE MULTI','MULTI',3,'p_MULTI','scanner.py',150),
  ('MULTI -> comma VARIABLE assign EXPR MULTI','MULTI',5,'p_MULTI_ASSIGN','scanner.py',156),
  ('MULTI -> <empty>','MULTI',0,'p_MULTI_LAMBDA','scanner.py',163),
  ('VARIABLE -> identifier','VARIABLE',1,'p_VARIABLE','scanner.py',166),
  ('EXPR -> lp EXPR rp','EXPR',3,'p_EXPR_ORDER','scanner.py',170),
  ('EXPR -> EXPR BINARYOPERATOR EXPR','EXPR',3,'p_EXPR_BINOP','scanner.py',175),
  ('EXPR -> VALUE','EXPR',1,'p_EXPR_VALUE','scanner.py',182),
  ('BINARYOPERATOR -> leftshift','BINARYOPERATOR',1,'p_BINARYOPERATOR','scanner.py',187),
  ('BINARYOPERATOR -> plus','BINARYOPERATOR',1,'p_BINARYOPERATOR','scanner.py',188),
  ('BINARYOPERATOR -> minus','BINARYOPERATOR',1,'p_BINARYOPERATOR','scanner.py',189),
  ('BINARYOPERATOR -> multiply','BINARYOPERATOR',1,'p_BINARYOPERATOR','scanner.py',190),
  ('BINARYOPERATOR -> divide','BINARYOPERATOR',1,'p_BINARYOPERATOR','scanner.py',191),
  ('BINARYOPERATOR -> lessequal','BINARYOPERATOR',1,'p_BINARYOPERATOR','scanner.py',192),
  ('RETURN -> return','RETURN',1,'p_RETURN','scanner.py',196),
  ('RETURN -> return EXPR','RETURN',2,'p_RETURN_EXPR','scanner.py',200),
  ('CODEBLOCK -> lb STMTS rb','CODEBLOCK',3,'p_CODEBLOCK','scanner.py',205),
  ('VALUE -> int_value','VALUE',1,'p_VALUE','scanner.py',210),
  ('VALUE -> identifier','VALUE',1,'p_VALUE','scanner.py',211),
  ('TYPE -> MODIFIER TYPE','TYPE',2,'p_TYPE','scanner.py',215),
  ('TYPE -> int','TYPE',1,'p_TYPE_INT','scanner.py',221),
  ('MODIFIER -> const','MODIFIER',1,'p_MODIFIER','scanner.py',225),
]
